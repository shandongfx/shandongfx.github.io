install.packages("servr")
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
servr::jekyll()
brocks
library(brocks)
install.packages("brocks")
devtools::install_github("hadley/lubridate")         # brocks reqs dev version
devtools::install_github("brendan-r/brocks")         # My lazy wrapper funs
library(brocks)
?brocks
new_post("Post title!")
getwd()
dir = "_source"
dir.exists(dir)
dir.exists
?dir.exists
??dir.exists
dir.exists
?dir.create
dir.exists
library(brocks)
new_post("Post title!")
library(brocks)
new_post("Post title!")
servr::jekyll()
servr::jekyll()
library(dismo)
gbif("aaa bbb")
gbif("Dasypus novemcinctus")
library(raster)
library(dismo)
rasterOptions(tmpdir="d:/temp/rTemp/")
setwd("d:/projects/2016.6_longkui/buildENM/")
world_map <- shapefile("D:/Xiao/GISDATA/ESRITemplateData/World/continent.shp")
asia_map <- world_map[which(world_map$CONTINENT=="Asia"),]
plot(asia_map)
plot(world_map)
library(dismo)
gbif("Dasypus nvemcinctus")
gbif("Dasypus novemcinctus")
occ <- gbif("Dasypus novemcinctus")
myspecies <- c("Dasypus novemcinctus","Dasypus novemcinctus")
occ <- gbif(myspecies)
for (i in 1:3){
print ( list[i] )
}
list <- c("sp1","sp2","sp3")
for (i in 1:3){
print ( list[i] )
}
length(list)
all_app <- list()
for (i in 1: length(list) ){
print ( list[i] )
all_app[[i]] <- gbif( list[i] )
}
list[1]
all_app [[1]]
head(occ)
View(occ)
View(occ)
names(occ)
duplicated(occ[c("lon","lat")])
dup_results <- duplicated(occ[c("lon","lat")])
table(dup_results)
occ_unique <- occ[!dup_results,]
nrow(occ_unique)
a <- TRUE
a
!a
table(occ$year)
occ_selected <- subet(occ,year==2016)
occ_selected <- subset(occ,year==2016)
nrow(occ_selected)
occ_selected <- subset(occ_selected,year>=1950 & year <=2000)
nrow(occ_selected)
occ_selected <- subset(occ_unique,year>=1950 & year <=2000)
nrow(occ_selected)
occ_selected <- subset(occ_unique,year<1950 | year >2000)
nrow(occ_selected)
occ_N <- subset(occ_unique,year>=1950
& year <=2000
& lat > 0)
nrow(occ_N)
coordinates( occ_unique ) <- ~ lon + lat
occ_unique_noNA <- subset(occ_unique, (!is.na(lon))& (!is.na(lat)) )
nrow(occ_unique_noNA)
occ_unique_noNA <- subset(occ_unique, (!is.na(lon)) | (!is.na(lat)) )
nrow(occ_unique_noNA)
coordinates( occ_unique_noNA ) <- ~ lon + lat
class(occ_unique_noNA)
plot(occ_unique_noNA)
basemap <- raster("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil")
shapefile(occ_unique_noNA,"d:/temp/myOCC.shp")
myOcc <- shapefile("d:/temp/myOCC.shp")
basemap <- raster("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil")
plot(basemap)
plot(occ_unique_noNA,add=T)
crs(occ_unique_noNA)
crs(basemap)
crs(basemap)
crs(occ_unique_noNA) <- crs(basemap)
crs(occ_unique_noNA) <- "+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0
+no_defs"
crs(occ_unique_noNA)
?crs
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
?maxent
maxent(x=basemap,p=occ_unique_noNA)
myModel <- maxent(x=basemap,p=occ_unique_noNA)
?predict
myPed <- predict (myModel, basemap)
names(basemap)
FUTURE <- basemap + 100
myModel <- maxent(x=basemap,p=FUTURE)
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
names(basemap)
FUTURE <- basemap + 100
myPed <- predict (myModel, FUTURE)
plot(myPed)
plot(occ_unique_noNA,add=T)
now_p <- predict (myModel, basemap)
future_p <- predict (myModel, FUTURE)
plot(stack(now_p,future_p))
names(basemap)
names(FUTURE)
FUTURE <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio2.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio3.bil")
predict (myModel, FUTURE)
myModel
myModel@results
library(raster)
library(alphashape3d)
library(foreach)
library(doParallel)
setwd("d:/projects/2016.6_nicheTransferability/experiment3")
spp <- "Large_2_region_3_rep_134"
novel <- read.csv(paste("data/3.env_hull_unlimited/",spp,"_novel.csv",sep=""))
load(paste("data/3.env_hull_unlimited/",spp,".3dhull",sep=""))
ref_a <- read.csv(paste("data/2.dataset_training_combined/",spp,"_train_a.csv",sep=""))
ref_p <- read.csv(paste("data/2.dataset_training_combined/",spp,"_train_p.csv",sep=""))
ref_env <- rbind(ref_p,ref_a)
ref_env <- ref_env[c("pc1","pc2","pc3")]
ref_env <- subset(ref_env,!duplicated(ref_env[c("pc1","pc2","pc3")]))
ref_env <- as.matrix(ref_env)
plot(ref_3d)
load(paste("data/3.env_hull_unlimited/3dhull/",spp,".3dhull",sep=""))
plot(ref_3d)
plot3d(subset(novel,novel==1)$pc1,subset(novel,novel==1)$pc2,subset(novel,novel==1)$pc3,col="green")
plot(ref_3d)
plot3d(subset(novel,novel==1)$pc1,subset(novel,novel==1)$pc2,subset(novel,novel==1)$pc3,col="green",add=T)
plot3d(subset(novel,novel==2)$pc1,subset(novel,novel==2)$pc2,subset(novel,novel==2)$pc3,col="red",add=T)
plot3d(subset(novel,novel==3)$pc1,subset(novel,novel==3)$pc2,subset(novel,novel==3)$pc3,col="black",add=T)
library(dismo)
plot(cars)
plot(cars)
plot(cars)
plot(cars)
# Load dismo library
library(dismo)
gbif()
#simply type in the species' scientific name
occ <- gbif("Dasypus novemcinctus")
head(occ)
head(occ)
getwd()
write.csv(occ_gbif.csv,"d:/temp/Dasypus novemcinctus")
write.csv(occ_gbif.csv,"d:/temp/Dasypus_novemcinctus.csv")
write.csv(occ,"d:/temp/Dasypus_novemcinctus.csv")
#simply type in the species' scientific name
#occ <- gbif("Dasypus novemcinctus")
write.csv(occ,"d:/temp/Dasypus_novemcinctus.csv")
head(occ)
cat(occ[1,])
write.csv(occ,"d:/temp/Dasypus_novemcinctus.csv")
occ[1,]
#simply type in the species' scientific name
occ <- gbif("Dasypus novemcinctus")
write.csv(occ,"d:/temp/Dasypus_novemcinctus.csv")
#read.csv("d:/temp/Dasypus_novemcinctus.csv")
dup_results <- duplicated(occ[c("lon","lat")])
table(dup_results)
# check duplicates
dup_results <- duplicated(occ[c("lon","lat")])
table(dup_results)  # TRUE: not unique record, FALSE: unique record
nrow(occ)  # original records number
occ_unique <- occ[!dup_results,]
nrow(occ_unique)  # updated records number
occ_updated <- subset(occ_unique, (!is.na(lon)) | (!is.na(lat)) )
nrow(occ_updated)
occ_selected <- subset(occ_unique,year==2016)
nrow(occ_selected)
# remove NA values
occ_updated <- subset(occ_unique, (!is.na(lon)) | (!is.na(lat)) )
nrow(occ_updated)
# select by year
occ_selected <- subset(occ_unique,year==2016)  # select records in 2016
nrow(occ_selected)
occ_selected <- subset(occ_unique,year>=1950 & year <=2000)  # between 1950~2000
occ_selected <- subset(occ_unique,year<1950 | year >2000)  # before 1950 or after 2000
occ_N <- subset(occ_unique,year>=1950
& year <=2000
& lat > 0)
# remove NA values
occ_updated <- subset(occ_unique, (!is.na(lon)) | (!is.na(lat)) )
# select by year
occ_selected <- subset(occ_unique,year==2016)  # select records in 2016
occ_selected <- subset(occ_unique,year>=1950 & year <=2000)  # between 1950~2000
occ_selected <- subset(occ_unique,year<1950 | year >2000)  # before 1950 or after 2000
occ_selected <- subset(occ_unique,year>=1950  # a combination of more conditions
& year <=2000
& lat > 0)
coordinates( occ_updated ) <- ~ lon + lat
class(occ_updated)
occ_updated <- subset(occ_unique, (!is.na(lon)) | (!is.na(lat)) )
class(occ_updated)
coordinates( occ_updated ) <- ~ lon + lat
class(occ_updated)
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
plot(crop(basemap,extent))
extent <- c(-60,-20,-60,60)
plot(crop(basemap,extent))
extent <- c(-120,-30,-60,60)
plot(crop(basemap,extent))
extent <- c(-140,-30,-50,80)
extent <- c(-140,-30,-50,80)
plot(crop(basemap,extent))
extent <- c(-160,-30,-50,80)
plot(crop(basemap,extent))
extent <- c(-180,-30,-50,80)
extent <- c(-180,-30,-50,80)
plot(crop(basemap,extent))
extent <- c(-180,-30,-60,80)
extent <- c(-180,-30,-60,80)
plot(crop(basemap,extent))
# load two layers: annual T. & P.
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
# Extract the raster to North & South America
extent <- c(-180,-30,-60,80)
plot(crop(basemap,extent))
plot(basemap[])
plot(basemap[[1])
plot(basemap[[1]])
# load two layers: annual T. & P.
basemap <- stack(c("d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio1.bil"),
"d:/Xiao/GISDATA/climate/WC/WorldClim_10arcmin_bil/bio12.bil")
# Extract the raster to North & South America
extent <- c(-180,-30,-60,80)
basemap <- crop(basemap,extent)
plot(basemap)
plot(basemap[[1]])
plot(basemap[[1]])
plot(basemap[[1]])
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
plot(basemap[[1]])
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
extract(basemap[[1]],occ_upda)
extract(basemap[[1]],occ_updated)
extracted <- extract(basemap[[1]],occ_updated)
table(is.na(extracted))
occ_updated <- occ_updated[!is.na(extracted), ]
plot(basemap[[1]])
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
# It is always good to unify the coordinate reference system (CRS).
crs(occ_updated) <- crs(basemap)  # Here I directly assign WGS84 to occurrences; but if you have different CRS, you need to transform one to the other.
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
extracted <- extract(basemap[[1]],occ_updated)
table(is.na(extracted))  # There are a few points have NA values
occ_updated <- occ_updated[!is.na(extracted), ]
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")  # Yes, they disappeared.
# It is always good to unify the coordinate reference system (CRS). There is a good document about CRS
# https://www.nceas.ucsb.edu/~frazier/RSpatialGuides/OverviewCoordinateReferenceSystems.pdf
crs(occ_updated) <- crs(basemap)  # Here I directly assign WGS84 to occurrences; but if you have different CRS, you need to transform one to the other.
plot(basemap[[1]])
plot(occ_updated,add=TRUE,col="red")
myModel <- maxent(x=basemap,p=occ_unique_noNA)
myModel <- maxent(x=basemap,p=occ_updated)
prediction_now <- predict (myModel, basemap)
myModel <- maxent(x=basemap,p=occ_updated)
myModel <- maxent(x=basemap,p=occ_updated)
install.packages("rJava")
myModel <- maxent(x=basemap,p=occ_updated)
myModel <- maxent(x=basemap,p=occ_updated)
